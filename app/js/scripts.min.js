!function(){"use strict";angular.module("app",["slickCarousel","app.routes","app.controllers","app.services","app.components"])}(),function(){"use strict";angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(o,t){o.when("/",{templateUrl:"src/views/home.html",controller:"mainController",controllerAs:"mainCtrl"}).when("/product/:product_id",{templateUrl:"src/views/product.html",controller:"productController",controllerAs:"productCtrl"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("app.components",["app.components.productsList"])}(),function(){"use strict";function o(){var o=this;o.categories={men:!0,women:!1,children:!0},o.seeAllProducts=function(){for(var t in o.categories)o.categories[t]=!0}}angular.module("app.controllers.mainController",[]).controller("mainController",o),o.$inject=[]}(),function(){"use strict";angular.module("app.controllers",["app.controllers.mainController","app.controllers.productController"])}(),function(){"use strict";function o(o,t,r){var n=this;n.product={},r.get({product_id:t.product_id}).$promise.then(function(o){console.log(o),n.product=o}).catch(function(o){404===o.status&&n.backToMain()}),n.backToMain=function(){o.history.back()}}angular.module("app.controllers.productController",[]).controller("productController",o),o.$inject=["$window","$routeParams","Product"]}(),function(){"use strict";angular.module("app.services",["app.services.product"])}(),function(){"use strict";function o(o,r,n){var e=this;e.products=[],e.settings={dots:!0,infinite:!1,slidesToShow:3,slidesToScroll:3,responsive:[{breakpoint:1200,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:768,settings:{slidesToShow:1,slidesToScroll:1}}],event:{init:function(o,r){t(e,r,r.activeBreakpoint)},breakpoint:function(o,r,n){t(e,r,n)}}},e.push=function(o){var t="/product/"+o;r.url(t)},e.$onInit=function(){n.query(function(o){e.products=o[e.category],e.allPages=Math.ceil(e.products.length/3)})},e.$onChanges=function(t){e.isOdd="true"===e.odd;var r=e.products;e.products=[],o(function(){e.products=r},0)}}function t(o,t,r){o.allPages=768==r?t.slideCount:1200==r?Math.ceil(t.slideCount/2):Math.ceil(t.slideCount/3)}angular.module("app.components.productsList",["app.services"]).component("productsList",{templateUrl:"src/components/products-list/products-list.template.html",controller:o,bindings:{category:"@",sortProp:"@",odd:"@"}}),o.$inject=["$timeout","$location","Product"]}(),function(){"use strict";function o(o){return o("src/clothes/:product_id.json",{},{query:{method:"GET",params:{product_id:"clothes"}}})}angular.module("app.services.product",["ngResource"]).factory("Product",o),o.$inject=["$resource"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
